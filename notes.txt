Day 1 (March 23 2020)
- There are a lot of technologies for web development out there, so what technology to use?
- What technologies to use?
	- php? python? angular? ....
	- choose one stack and focus on learning it well
- JavaScript is essential for a web developer! So you must learn it!
	- A lot of updates every year!
	- Node js!
		- It is also possible to develop mobile apps


- How to choose a stack:
	- What the market is looking for? (you need to understand this)
	- How many and which companies are using it? (facebook? twitter? airbnb?...)
	- How big is the community and the echo system?
	- Who is developing and maintaining it?
	- What are the use cases of the technologies?
	- Positions on the market to persue a carrer betting in these technologies?
	- Will it be easy if you need to migrate to other technologies?
	- Can you multiply your opportunities without much effort?
	- Are the technologies aligned with your wishes?
	- Who is searching/asking for it?
	- Multi-platform?

- Install node and npm
	- Installed with NVM on linux
	- nvm install 12.16.1

- Setting up Visual Studio Code
	- set dracula theme

- Back-end, what is it? where it lives?
	- It is where all business rules are located
	- Connection with database
	- Send e-mail and push notifications
	- Communication with other APIs (webservices)
	- Users authentication
	- Criptography and security
	- API RESTfull
	- Communication can be via:
		- JSON (front-end web)
		- JSON (front-end mobile)
		- JSON (external webservices)

- Creating the project with Node.js (Hello World)
	- npm install express
	- create index.js

- Different approaches
	- Traditional approach
		- Client requests some information
		- Server process the requests and sends the page (HTML) with styles (CSS) with the requested information [server side]
		- Client then render the page [client side]
	- Single-Page Applications (SPA) approach
		- Client requests some information
		- Server process the requests and sends only the data requested [server side]
		- Client then organize the received data in the interface (HTML with CSS) [client side]
		- Server does not handle data presentation to clients (HTML and CSS)
		- Data are transferred on JSON format
			- Same server's APIs -> Multiple applications (web, mobile, etc...)

- Node.js [backend]
- React.js [frontend]

- Creating the frontend project
	- npx create-react-app frontend
	- cd frontend
	- npm start

- Understanding React Native
	- Traditional approach
		- Before: Objective-C (Apple) and Java (Android)
		- Today: Swift (Apple) and Kotlin (Android)
	- React Native approach
		- React Native creates Apple and Android apps
		- It's native! So you can create native applications to iOS and Android with only one framework!
		- Performance is almost the same (99.something...%)

- What is Expo?
	- React Native Framework
		- Helps to use camera, map, gps, accelerometers, etc..
		- Abstracts all SDK, so you don't need to install SDK and everything
		